---
// Kids Hackathon Popup Component
---

<div id="kids-popup-overlay" class="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center p-4 opacity-0 pointer-events-none transition-opacity duration-300">
  <div id="kids-popup-content" class="relative max-w-2xl w-full bg-gradient-to-br from-cyan-500 via-blue-500 to-purple-600 rounded-3xl shadow-2xl transform scale-95 transition-transform duration-300 overflow-hidden">

    <!-- Animated background blobs -->
    <div class="absolute inset-0 opacity-30 pointer-events-none">
      <div class="absolute top-10 left-10 w-32 h-32 bg-yellow-400 rounded-full mix-blend-multiply filter blur-2xl animate-blob"></div>
      <div class="absolute top-20 right-10 w-40 h-40 bg-pink-400 rounded-full mix-blend-multiply filter blur-2xl animate-blob animation-delay-2000"></div>
      <div class="absolute bottom-10 left-20 w-36 h-36 bg-orange-400 rounded-full mix-blend-multiply filter blur-2xl animate-blob animation-delay-4000"></div>
    </div>

    <!-- Close button -->
    <button
      id="kids-popup-close"
      class="absolute top-4 right-4 z-10 w-10 h-10 flex items-center justify-center bg-white/90 hover:bg-white rounded-full shadow-lg transition-all duration-300 hover:scale-110"
      aria-label="Close popup"
    >
      <svg class="w-6 h-6 text-gray-800" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
      </svg>
    </button>

    <!-- Content -->
    <div class="relative z-10 p-6 md:p-8">
      <!-- Image -->
      <div class="mb-6">
        <img
          src="/kids-hackathon/united_for_kids.png"
          alt="United for Kids - Kids Coding Hackathon Belgium"
          class="w-full h-auto rounded-2xl shadow-xl border-4 border-white/30"
        />
      </div>

      <!-- Title -->
      <div class="text-center mb-6">
        <h2 class="text-3xl md:text-4xl font-black text-white drop-shadow-lg mb-2 tracking-tight">
          <span class="inline-block animate-bounce" style="animation-delay: 0s;">üáßüá™</span>
          <span class="inline-block animate-bounce" style="animation-delay: 0.1s;">‚≠êÔ∏è</span>
          Kids Coding Hackathon
        </h2>
        <p class="text-lg md:text-xl font-bold text-white/95 drop-shadow-md">
          11 October 2025 ‚Ä¢ All Across Belgium üöÄ
        </p>
        <p class="text-md text-white/90 mt-2">
          Ages 9-13 ‚Ä¢ Free Event ‚Ä¢ Multiple Cities
        </p>
      </div>

      <!-- CTA Buttons -->
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <a
          href="/kids"
          class="inline-flex items-center justify-center px-8 py-4 text-lg font-black text-purple-600 bg-white rounded-full hover:bg-gray-100 transition-all duration-300 hover:scale-105 shadow-lg hover:shadow-xl"
        >
          Learn More & Register
          <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
          </svg>
        </a>
        <button
          id="kids-popup-dismiss"
          class="inline-flex items-center justify-center px-8 py-4 text-lg font-bold text-white bg-white/20 backdrop-blur-sm rounded-full hover:bg-white/30 transition-all duration-300 border-2 border-white/50"
        >
          Maybe Later
        </button>
      </div>
    </div>

    <!-- Floating stars -->
    <div class="absolute inset-0 pointer-events-none overflow-hidden">
      {[...Array(8)].map((_, i) => (
        <div
          class="absolute text-2xl md:text-3xl animate-float"
          style={`
            left: ${Math.random() * 100}%;
            top: ${Math.random() * 100}%;
            animation-delay: ${Math.random() * 3}s;
            animation-duration: ${2 + Math.random() * 3}s;
          `}
        >
          ‚≠êÔ∏è
        </div>
      ))}
    </div>
  </div>
</div>

<style>
  @keyframes blob {
    0%, 100% {
      transform: translate(0, 0) scale(1);
    }
    25% {
      transform: translate(10px, -20px) scale(1.1);
    }
    50% {
      transform: translate(-10px, 10px) scale(0.9);
    }
    75% {
      transform: translate(20px, 20px) scale(1.05);
    }
  }

  .animate-blob {
    animation: blob 7s infinite;
  }

  .animation-delay-2000 {
    animation-delay: 2s;
  }

  .animation-delay-4000 {
    animation-delay: 4s;
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0) rotate(0deg);
      opacity: 0.4;
    }
    50% {
      transform: translateY(-20px) rotate(180deg);
      opacity: 0.7;
    }
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  @keyframes bounce {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-8px);
    }
  }

  .animate-bounce {
    animation: bounce 1s infinite;
  }

  #kids-popup-overlay.show {
    opacity: 1;
    pointer-events: auto;
  }

  #kids-popup-overlay.show #kids-popup-content {
    transform: scale(1);
  }

  /* Mobile optimizations */
  @media (max-width: 640px) {
    #kids-popup-content {
      max-height: 90vh;
      overflow-y: auto;
    }
  }
</style>

<script>
  // Show popup after 3 seconds, but only once per session
  const POPUP_KEY = 'kids_hackathon_popup_shown';
  const POPUP_DELAY = 3000; // 3 seconds

  function showPopup() {
    const overlay = document.getElementById('kids-popup-overlay');
    if (overlay) {
      setTimeout(() => {
        overlay.classList.add('show');
      }, 100);
    }
  }

  function hidePopup() {
    const overlay = document.getElementById('kids-popup-overlay');
    if (overlay) {
      overlay.classList.remove('show');
      // Mark as shown in session storage
      sessionStorage.setItem(POPUP_KEY, 'true');
    }
  }

  // Initialize popup behavior
  document.addEventListener('DOMContentLoaded', () => {
    // Check if popup was already shown this session
    const alreadyShown = sessionStorage.getItem(POPUP_KEY);

    if (!alreadyShown) {
      // Show popup after delay
      setTimeout(() => {
        showPopup();
      }, POPUP_DELAY);
    }

    // Close button
    const closeButton = document.getElementById('kids-popup-close');
    if (closeButton) {
      closeButton.addEventListener('click', hidePopup);
    }

    // Dismiss button
    const dismissButton = document.getElementById('kids-popup-dismiss');
    if (dismissButton) {
      dismissButton.addEventListener('click', hidePopup);
    }

    // Close on overlay click (but not content click)
    const overlay = document.getElementById('kids-popup-overlay');
    if (overlay) {
      overlay.addEventListener('click', (e) => {
        if (e.target === overlay) {
          hidePopup();
        }
      });
    }

    // Close on ESC key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        const overlay = document.getElementById('kids-popup-overlay');
        if (overlay && overlay.classList.contains('show')) {
          hidePopup();
        }
      }
    });
  });
</script>
